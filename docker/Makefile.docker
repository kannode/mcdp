branch := $(shell git rev-parse --abbrev-ref HEAD)

tag := $(branch)

dd=docker

mcdp_deps.Dockerfile: $(dd)/0_deps.Dockerfile
	-chmod +w $@
	cat $^ > $@
	chmod -w $@

mcdp.Dockerfile: $(dd)/0_deps.Dockerfile $(dd)/1_mcdp_install.Dockerfile
	-chmod +w $@
	cat $^ > $@
	chmod -w $@

mcdp_server.Dockerfile: $(dd)/0_deps.Dockerfile $(dd)/1_mcdp_install.Dockerfile $(dd)/2_mcdp_server.Dockerfile
	-chmod +w $@
	cat $^ > $@
	chmod -w $@


mcdp_books.Dockerfile: $(dd)/0_deps.Dockerfile $(dd)/1_mcdp_install.Dockerfile $(dd)/3_books.Dockerfile
	-chmod +w $@
	cat $^ > $@
	chmod -w $@


dockerfiles: mcdp_deps.Dockerfile mcdp.Dockerfile mcdp_server.Dockerfile mcdp_books.Dockerfile

docker-build: dockerfiles
	docker build -t andreacensi/mcdp_deps:$(tag)   -f mcdp_deps.Dockerfile   .
	docker build -t andreacensi/mcdp:$(tag)        -f mcdp.Dockerfile        .
	docker build -t andreacensi/mcdp_server:$(tag) -f mcdp_server.Dockerfile .
	docker build -t andreacensi/mcdp_books:$(tag)  -f mcdp_books.Dockerfile .

docker-upload: docker-build
	$(MAKE) docker-upload-only

docker-upload-only:
	docker push andreacensi/mcdp_deps:$(tag)
	docker push andreacensi/mcdp:$(tag)
	docker push andreacensi/mcdp_server:$(tag)
	docker push andreacensi/mcdp_books:$(tag)


docker-clean:
	# Kill all running containers:
	-docker kill $(shell docker ps -q)

	# Delete all stopped containers (including data-only containers):
	-docker rm $(shell docker ps -a -q)

	# Delete all exited containers
	-docker rm $(shell docker ps -q -f status=exited)

	# Delete all images
	-docker rmi $(shell docker images -q)


docker-bash:
	docker run -it --entrypoint /bin/bash andreacensi/mcdp:$(tag)
