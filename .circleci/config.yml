version: 2
jobs:
    build:
     docker:
        - image: andreacensi/duckietown-xenial-kinetic:19
          environment:
              COLUMNS: 160
              NODE_PATH: /root/project/node_modules
     parallelism: 3
     resource_class: large
     steps:
        - checkout
        - run:
            name: Pulling large files.
            command: |
                # git lfs version
                # git lfs pull
        - run:
            name: deps
            command: |
                make python-module-stats
                pip install -U -r requirements.txt
                pip install -U selenium
                make python-module-stats


        - run:
            name: NPM
            command: |
                curl -sL https://deb.nodesource.com/setup_6.x | bash
                apt install -y nodejs
                npm install MathJax-node jsdom@9.3 less


        - run:
            name: Install
            command: |
                python setup.py develop

                # pip install pympler

                apt install -y strace lsof iotop

                make python-module-stats

                mkdir -p out/comptests-failures

        - run:
            name: Make sure things are ok
            command:  |
                echo "Worker" $CIRCLE_NODE_INDEX " of " $CIRCLE_NODE_TOTAL:
                echo "Current directory:"
                pwd
                /usr/bin/nodejs --version
                /usr/bin/npm --version
                python --version
                python -c "import numpy; print 'numpy: %s' % numpy.__version__"
                python -c "import matplotlib; print 'matplotlib: %s' % matplotlib.__version__"
                python -c "import compmake; print 'compmake: %s' % compmake.__version__"
                python -c "import contracts; print 'contracts: %s' % contracts.__version__"
                fc-list | sort
                cp misc/unittests-compmake.rc .compmake.rc
                cat .compmake.rc

        - run:
            command:  |
                make clean circle
            environment:
                MCDP_TEST_SKIP_MCDPOPT: 1
                # MCDP_TEST_LIBRARIES_EXCLUDE = mcdp_theory
                # MCDP_TEST_LIBRARIES = "basic,eversion,libtemplates,multisets_tests,posets,tuple_indexing,tuple_making,uncertainty,comments,documents,making,pop,batteries_v1"
                MPLBACKEND: agg

        - run:
            when: always
            command: |
                mkdir -p out/comptests/junit
                comptests-to-junit  out/comptests/compmake >  out/comptests/junit/junit.xml
        - test-results-store:
                path: out/comptests/junit

        - run:
            when: always
            command: |
                ./misc/generate-other-reports.sh

        - store_artifacts:
              path: out
              destination: out
